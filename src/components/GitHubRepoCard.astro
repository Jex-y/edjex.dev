---
import clsx from 'clsx';

const github_api_key = import.meta.env.GITHUB_API_KEY as astring | undefined;

export interface Props {
  githubUrl: string;
  className?: string;
}

const { githubUrl, className = '' } = Astro.props;

// Extract owner and repo from GitHub URL
const parseGitHubUrl = (url: string) => {
  const match = url.match(/github\.com\/([^\/]+)\/([^\/]+)/);
  if (!match) throw new Error('Invalid GitHub URL');
  return { owner: match[1], repo: match[2] };
};

let repoData = null;

const { owner, repo } = parseGitHubUrl(githubUrl);

const response = await fetch(`https://api.github.com/repos/${owner}/${repo}`, {
  headers: {
    ...(github_api_key ? { Authorization: `token ${github_api_key}` } : {}),
  },
});

if (!response.ok) {
  throw new Error(`GitHub API error: ${response.status}`);
}

repoData = await response.json();

const formatNumber = (num: number) => {
  if (num >= 1000) {
    return (num / 1000).toFixed(1) + 'k';
  }
  return num.toString();
};

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  });
};
---

<div
  class={clsx(
    'w-md max-w-full bg-accent text-accent-foreground rounded-lg shadow-md',
    className,
  )}
>
  <div class="p-6">
    {/* Header */}
    <div class="flex items-start justify-between">
      <div class="flex items-center space-x-3">
        <img
          src={repoData.owner.avatar_url}
          alt={`${repoData.owner.login} avatar`}
          class="w-10 h-10 rounded-full"
        />
        <div>
          <h3 class="text-lg font-semibold text-gray-100">
            <a
              href={repoData.html_url}
              target="_blank"
              rel="noopener noreferrer"
            >
              {repoData.name}
            </a>
          </h3>
          <p class="text-sm text-gray-400">
            by {repoData.owner.login}
          </p>
        </div>
      </div>
    </div>

    {/* Description */}
    {
      repoData.description && (
        <p class="mt-4 text-gray-300 text-sm leading-relaxed">
          {repoData.description}
        </p>
      )
    }

    {/* Language and Topics */}
    <div
      class="mt-4 flex flex-nowrap gap-2 overflow-x-scroll text-xs text-nowrap"
    >
      {
        repoData.language && (
          <span class="px-2 py-1 bg-blue-900 text-blue-200 font-medium rounded">
            {repoData.language}
          </span>
        )
      }
      {
        repoData.topics &&
          repoData.topics
            .slice(0, 3)
            .map((topic: string) => (
              <span class="px-2 py-1 bg-gray-700 text-gray-200 rounded">
                {topic}
              </span>
            ))
      }
    </div>

    {/* Stats */}
    <div class="mt-4 flex items-center space-x-6 text-sm text-gray-400">
      <div class="flex items-center space-x-1">
        <svg
          class="w-4 h-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
          ></path>
        </svg>
        <span>{formatNumber(repoData.stargazers_count)}</span>
      </div>

      {
        repoData.open_issues_count > 0 && (
          <div class="flex items-center space-x-1">
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"
              />
            </svg>
            <span>{formatNumber(repoData.open_issues_count)}</span>
          </div>
        )
      }
    </div>

    {/* Footer */}
    <div
      class="mt-4 pt-4 border-t border-gray-700 flex items-center justify-between text-xs text-gray-400"
    >
      <div>Updated {formatDate(repoData.updated_at)}</div>
      <div class="flex items-center space-x-4">
        {repoData.license && <span>{repoData.license.name}</span>}
        <a
          href={repoData.html_url}
          target="_blank"
          rel="noopener noreferrer"
          class="hover:text-blue-400 transition-colors"
        >
          View on GitHub â†’
        </a>
      </div>
    </div>
  </div>
</div>
